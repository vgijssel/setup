load("@pdm-setup//:requirements.bzl", "requirement")
load("//tools/pytest:pytest.bzl", "py_pytest_test")
load("@rules_task//task:defs.bzl", "cmd", "task")
load("@rules_release//tools:defs.bzl", "publish_github_release", release = "release_bazel_differ")
load("@aspect_bazel_lib//lib:tar.bzl", "tar")

package(default_visibility = ["//visibility:public"])

py_library(
    name = "lib",
    srcs = [
        "custom_components/occupancy/__init__.py",
        "custom_components/occupancy/binary_sensor.py",
        "custom_components/occupancy/const.py",
        "custom_components/occupancy/helper.py",
        "custom_components/occupancy/select.py",
    ],
    data = [
        "custom_components/occupancy/manifest.json",
    ],
    imports = ["."],
)

py_pytest_test(
    name = "test",
    size = "small",
    srcs = [
        "tests/conftest.py",
        "tests/helpers.py",
        "tests/test_door.py",
        "tests/test_init.py",
    ],
    args = ["--asyncio-mode=auto"],
    imports = ["."],
    deps = [
        ":lib",
        requirement("pytest-homeassistant-custom-component"),
        requirement("tzdata"),
    ],
)

task(
    name = "tilt",
    cmds = [
        cmd.shell(
            cmd.executable("//tools/tilt"),
            "$CLI_ARGS",
        ),
    ],
    cwd = "{{ os.environ['BUILD_WORKSPACE_DIRECTORY'] }}/occupancy_component",
    data = [
        ":Tiltfile",
        ":docker-compose.yml",
        "//tools/tilt:post_build/Tiltfile",
    ],
)

task(
    name = "dev",
    cmds = [
        "$tilt up --port 10350",
        {"defer": "$tilt down"},
    ],
    env = {
        "tilt": cmd.executable(":tilt"),
    },
)

filegroup(
    name = "all_files",
    srcs = glob(["**/*"]),
)

tar(
    name = "release_archive",
    srcs = [
        ":all_files",
    ],
    out = "occupancy_component.tar.gz",
    compress = "gzip",
)

publish_github_release(
    name = "publish_github_release",
    assets = [
        ":release_archive",
    ],
    before_cmds = [
        "export OP_SERVICE_ACCOUNT_TOKEN=${ONEPASSWORD_SERVICE_ACCOUNT_TOKEN_PROD:-}",
        "GH_TOKEN=$($OP read op://vgijssel-prod/github-release/credential)",
        "export GH_TOKEN",
    ],
    env = {
        "OP": cmd.executable("@rules_release//tools/onepassword:op"),
    },
    release = ":release",
)

release(
    name = "release",
    changelog_file = "CHANGELOG.md",
    publish_cmds = [
        ":publish_github_release",
    ],
    release_name = "occupancy_component",
    target = ":all_files",
    version_file = "version.txt",
)
