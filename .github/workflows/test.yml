# for debugging https://github.com/marketplace/actions/debugging-with-tmate

name: Test
on: [push]
jobs:
  cancel_previous_run:
    name: Cancel Previous Run
    timeout-minutes: 2
    runs-on: ubuntu-latest
    steps:
      - name: cancel previous runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

  # test-dotfiles:
  #   name: Test dotfiles
  #   timeout-minutes: 60
  #   runs-on: macos-latest
  #   defaults:
  #     run:
  #       shell: bash -l {0}
  #   steps:
  #     - uses: actions/checkout@v1
  #     - run: ./scripts/github_load_env.sh .envrc
  #     - run: env
  #     - run: |
  #         export CI_PASSWORD=''
  #         export BRANCH="$GIT_BRANCH"
  #         eval "$(cat ./dotfiles/bootstrap.sh)" < <(echo $CI_PASSWORD)
  #     - run: env
  #     - working-directory: ${{ env.SETUP_DOTFILES_DIR }}
  #       run: bundle install
  #     - working-directory: ${{ env.SETUP_DOTFILES_DIR }}
  #       run: bundle exec rspec

  hypervisor-test:
    name: Hypervisor test
    timeout-minutes: 30
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v1
      - uses: pat-s/always-upload-cache@v3.0.1
        id: bazel-cache
        with:
          path: |
            cache/bazel_cache
            cache/bazel_repository_cache
          key: bazel-cache-${{ runner.os }}-${{ github.sha }}
          restore-keys: bazel-cache-${{ runner.os }}-
      - name: Read .tool-versions
        uses: marocchino/tool-versions-action@v1
        id: versions
        with:
          path: dotfiles/files/tool-versions
      - name: Use Ruby ${{ steps.versions.outputs.ruby}}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ steps.versions.outputs.ruby}}
      - run: brew install just qemu coreutils
      - run: which sha512sum
      - run: just hypervisor-test

  # macos-info:
  #   name: Print macos vm information
  #   timeout-minutes: 5
  #   runs-on: macos-10.15
  #   steps:
  #     - env:
  #         GITHUB: ${{ toJson(github) }}
  #         ENV: ${{ toJson(env) }}
  #         JOB: ${{ toJson(job) }}
  #         STEPS: ${{ toJson(steps) }}
  #         RUNNER: ${{ toJson(runner) }}
  #         SECRETS: ${{ toJson(secrets) }}
  #         STRATEGY: ${{ toJson(strategy) }}
  #         MATRIX: ${{ toJson(matrix) }}
  #       run: |
  #         env
  #     - uses: actions/checkout@v1
  #     - run: ls -la
  #     - run: ifconfig
  #     - run: id
  #     - run: VBoxManage list bridgedifs | grep ^Name || true
  #     - run: vboxmanage --version || true
  #     - run: sudo pfctl -s all
  #     - run: sysctl -a
