# for debugging https://github.com/marketplace/actions/debugging-with-tmate

name: Test
on: [push]
jobs:
  cancel_previous_run:
    name: Cancel Previous Run
    timeout-minutes: 2
    runs-on: ubuntu-latest
    steps:
      - name: cancel previous runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

  select_tests_to_run:
    name: Select Tests to Run
    timeout-minutes: 4
    runs-on: ubuntu-latest
    outputs:
      run-workstation-test: ${{ steps.changed-test-targets.outputs.workstation-test }}
      run-hypervisor-test: ${{ steps.changed-test-targets.outputs.hypervisor-test }}
      run-occupancy_component-test: ${{ steps.changed-test-targets.outputs.occupancy_component-test }}
    steps:
      - uses: actions/checkout@v1
      - uses: pat-s/always-upload-cache@v3.0.1
        id: bazel-cache
        with:
          path: |
            cache/bazel_cache
            cache/bazel_repository_cache
          key: bazel-cache-${{ runner.os }}-${{ github.job }}-${{ github.sha }}
          restore-keys: bazel-cache-${{ runner.os }}-${{ github.job }}-
      - run: sudo snap install --edge --classic just
      - id: changed-test-targets
        run: just changed-test-targets-current-branch

  occupancy_component-test:
    if: needs.select_tests_to_run.outputs.run-occupancy_component-test == 'true'
    name: Occupancy Component test
    needs: select_tests_to_run
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: pat-s/always-upload-cache@v3.0.1
        id: bazel-cache
        with:
          path: |
            cache/bazel_cache
            cache/bazel_repository_cache
          key: bazel-cache-${{ runner.os }}-${{ github.job }}-${{ github.sha }}
          restore-keys: bazel-cache-${{ runner.os }}-${{ github.job }}-
      - run: bazel test //occupancy_component:test

  workstation-test:
    if: needs.select_tests_to_run.outputs.run-workstation-test == 'true'
    name: Workstation test
    needs: select_tests_to_run
    timeout-minutes: 30
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v1
      - uses: pat-s/always-upload-cache@v3.0.1
        id: bazel-cache
        with:
          path: |
            cache/bazel_cache
            cache/bazel_repository_cache
          key: bazel-cache-${{ runner.os }}-${{ github.job }}-${{ github.sha }}
          restore-keys: bazel-cache-${{ runner.os }}-${{ github.job }}-
      # removing the aws CLI so it can be installed by the workstation provisioning
      - run: rm /usr/local/bin/aws /usr/local/bin/aws_completer
      - run: brew install docker
      - run: colima start
      - run: docker info
      - run: bazel run //workstation:test

  # TODO: this is failing already for a long time
  # hypervisor-test:
  #   if: needs.select_tests_to_run.outputs.run-hypervisor-test == 'true'
  #   name: Hypervisor test
  #   needs: select_tests_to_run
  #   timeout-minutes: 30
  #   runs-on: macos-12
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: pat-s/always-upload-cache@v3.0.1
  #       id: bazel-cache
  #       with:
  #         path: |
  #           cache/bazel_cache
  #           cache/bazel_repository_cache
  #         key: bazel-cache-${{ runner.os }}-${{ github.job }}-${{ github.sha }}
  #         restore-keys: bazel-cache-${{ runner.os }}-${{ github.job }}-
  #     - name: Read .tool-versions
  #       uses: marocchino/tool-versions-action@v1
  #       id: versions
  #       with:
  #         path: dotfiles/files/tool-versions
  #     - name: Use Ruby ${{ steps.versions.outputs.ruby}}
  #       uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: ${{ steps.versions.outputs.ruby}}
  #     - run: brew install just qemu coreutils
  #     - run: qemu-system-x86_64 --version
  #     - run: just hypervisor-test
  #     - name: Check if qemu logs exist
  #       id: check_files
  #       uses: andstor/file-existence-action@v1
  #       with:
  #         files: "/tmp/hypervisor.qcow2.packer.log"
  #     - name: Upload logs
  #       if: always()
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: bazel-logs
  #         path: /private/tmp/**/setup-bazel*.log
