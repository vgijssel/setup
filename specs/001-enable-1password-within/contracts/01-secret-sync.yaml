# Contract Test: Secret Synchronization
# Purpose: Verify OnePasswordItem creates Kubernetes Secret with correct data
# Maps to: FR-001, FR-008 (support all secret types), FR-009 (validate secrets exist)

---
# Setup: Create test namespace
apiVersion: v1
kind: Namespace
metadata:
  name: test-secret-sync
---
# Setup: Mock 1Password Connect credentials (for testing)
apiVersion: v1
kind: Secret
metadata:
  name: onepassword-connect
  namespace: test-secret-sync
type: Opaque
stringData:
  1password-credentials.json: |
    {
      "verifier": {
        "salt": "test-salt",
        "localHash": "test-hash"
      },
      "encCredentials": {
        "kid": "test-kid",
        "enc": "test-enc",
        "cty": "test-cty",
        "iv": "test-iv",
        "data": "test-data"
      }
    }
  token: "test-connect-token"
---
# Test: Create OnePasswordItem for plain text secret
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: test-plain-secret
  namespace: test-secret-sync
spec:
  itemPath: "vaults/test-vault/items/test-item"
---
# Assert: OnePasswordItem becomes Ready
apiVersion: kuttl.dev/v1beta1
kind: TestAssert
timeout: 30
collectors:
- type: events
  namespace: test-secret-sync
---
# Expected: OnePasswordItem status Ready
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: test-plain-secret
  namespace: test-secret-sync
status:
  conditions:
  - type: Ready
    status: "True"
---
# Expected: Kubernetes Secret created
apiVersion: v1
kind: Secret
metadata:
  name: test-plain-secret
  namespace: test-secret-sync
  labels:
    onepassword.com/managed-by: "onepassword-connect"
type: Opaque
# Note: data content validated by integration tests (requires real 1Password)
