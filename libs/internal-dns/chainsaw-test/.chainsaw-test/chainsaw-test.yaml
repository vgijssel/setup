apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: install-internal-dns
spec:
  description: Install and test internal-dns helm chart
  timeouts:
    apply: 2m
    assert: 5m
    exec: 15m
  steps:
    - name: Wait for 1Password operator to be ready
      try:
        - script:
            timeout: 5m
            content: |
              echo "Waiting for 1Password operator deployment..."
              kubectl wait --for=condition=available deployment/onepassword-connect-operator \
                -n 1password --timeout=300s || echo "1Password operator not ready, tests may fail"

              echo "Checking if 1Password operator pod is running..."
              kubectl get pods -n 1password -l app.kubernetes.io/name=onepassword-connect
    - name: Install internal-dns chart
      try:
        - command:
            entrypoint: helm
            args:
              - upgrade
              - --install
              - internal-dns
              - ../..
              - --wait
              - --timeout=600s
        - assert:
            file: internal-dns-assert.yaml
    - name: Verify OnePasswordItem created secret
      try:
        - script:
            timeout: 3m
            content: |
              echo "Waiting for OnePasswordItem to sync secret..."
              # Wait up to 3 minutes for the secret to be created by 1Password operator
              for i in $(seq 1 36); do
                if kubectl get secret internal-dns-cloudflare -n default > /dev/null 2>&1; then
                  echo "Secret internal-dns-cloudflare exists"

                  # Check if it has the expected key
                  if kubectl get secret internal-dns-cloudflare -n default -o jsonpath='{.data.apiToken}' | base64 -d > /dev/null 2>&1; then
                    TOKEN=$(kubectl get secret internal-dns-cloudflare -n default -o jsonpath='{.data.apiToken}' | base64 -d)

                    # Check if it's a real token (CloudFlare tokens start with specific patterns)
                    # or a fake token used for testing
                    if [ "$TOKEN" = "fake-token-for-testing" ]; then
                      echo "WARNING: Using fake token, DNS validation will be skipped"
                      exit 0
                    else
                      echo "SUCCESS: Real Cloudflare credentials detected"
                      exit 0
                    fi
                  fi
                fi
                echo "Attempt $i/36: Secret not ready yet, waiting 5 seconds..."
                sleep 5
              done

              echo "ERROR: Secret not synced after 3 minutes"
              exit 1
    - name: Create test ingress
      try:
        - apply:
            file: test-ingress.yaml
    - name: Verify external-dns is running
      try:
        - assert:
            file: external-dns-running-assert.yaml
    - name: Wait for DNS record creation
      try:
        - sleep:
            duration: 60s
    - name: Validate DNS record exists in Cloudflare
      try:
        - script:
            timeout: 3m
            content: |
              # Check if we have real credentials before validating DNS
              if kubectl get secret internal-dns-cloudflare -n default > /dev/null 2>&1; then
                TOKEN=$(kubectl get secret internal-dns-cloudflare -n default -o jsonpath='{.data.apiToken}' | base64 -d)

                if [ "$TOKEN" = "fake-token-for-testing" ]; then
                  echo "Skipping DNS validation (fake credentials detected)"
                  echo "Checking external-dns logs for configuration..."
                  kubectl logs -n default -l app.kubernetes.io/name=internal-dns --tail=50 || true
                  exit 0
                fi
              fi

              # Validate DNS record was created in Cloudflare
              # Retry up to 12 times (2 minutes) to allow for DNS propagation
              HOSTNAME="($namespace).enigma.vgijssel-dev.nl"

              for i in $(seq 1 12); do
                echo "Attempt $i: Checking DNS for $HOSTNAME"

                # Use nslookup to check if DNS record exists
                if nslookup "$HOSTNAME" 8.8.8.8 > /dev/null 2>&1; then
                  echo "SUCCESS: DNS record found for $HOSTNAME"
                  exit 0
                fi

                echo "DNS record not found yet, waiting 10 seconds..."
                sleep 10
              done

              echo "ERROR: DNS record not found for $HOSTNAME after 2 minutes"
              echo "External-dns logs:"
              kubectl logs -n default -l app.kubernetes.io/name=internal-dns --tail=100 || true
              exit 1
    - name: Uninstall internal-dns chart
      try:
        - command:
            entrypoint: helm
            args:
              - uninstall
              - internal-dns
              - --wait
              - --timeout=300s
    - name: Wait for complete cleanup
      try:
        - script:
            content: |
              # Wait for deployment to be fully deleted
              echo "Waiting for deployment to be deleted..."
              kubectl wait --for=delete deployment/internal-dns --timeout=60s || true

              # Verify OnePasswordItem is deleted
              echo "Verifying OnePasswordItem cleanup..."
              kubectl wait --for=delete onepassworditem/internal-dns-cloudflare --timeout=60s || true

              echo "Cleanup complete"
