apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "internal-dns.fullname" . }}
  labels:
    {{- include "internal-dns.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "internal-dns.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "internal-dns.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.persistence.enabled }}
      initContainers:
        - name: init-db
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command: ["/bin/sh"]
          args:
            - -c
            - |
              set -e
              if [ ! -f /var/lib/powerdns/pdns.sqlite3 ]; then
                echo "Creating PowerDNS SQLite database..."
                sqlite3 /var/lib/powerdns/pdns.sqlite3 < /usr/local/share/doc/pdns/schema.sqlite3.sql
                echo "Database created successfully"
              else
                echo "Database already exists"
              fi
          volumeMounts:
            - name: data
              mountPath: /var/lib/powerdns
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: dns-udp
              containerPort: 53
              protocol: UDP
            - name: dns-tcp
              containerPort: 53
              protocol: TCP
          env:
            - name: PDNS_RECURSOR_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.apiKey.name }}
                  key: {{ .Values.secrets.apiKey.key }}
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/powerdns
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.persistence.enabled }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "internal-dns.fullname" . }}-data
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}