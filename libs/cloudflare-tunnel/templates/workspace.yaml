apiVersion: opentofu.upbound.io/v1beta1
kind: Workspace
metadata:
  name: cloudflare-tunnel-workspace
spec:
  forProvider:
    source: Inline
    module: |
      terraform {
        required_providers {
          cloudflare = {
            source = "cloudflare/cloudflare"
            version = "5.9.0"
          }
        }
      }

      variable "cloudflare_api_token" {
        description = "Cloudflare API token"
        type        = string
        sensitive   = true
      }

      variable "cloudflare_account_id" {
        description = "Cloudflare account ID"
        type        = string
      }

      variable "tunnel_name" {
        description = "Cloudflare tunnel name"
        type        = string
      }

      variable "tunnel_hostname" {
        description = "Hostname for the tunnel"
        type        = string
      }

      variable "tunnel_service" {
        description = "Service URL for the tunnel"
        type        = string
      }

      provider "cloudflare" {
        api_token = var.cloudflare_api_token
      }

      resource "cloudflare_zero_trust_tunnel_cloudflared" "example" {
        account_id = var.cloudflare_account_id
        name       = var.tunnel_name
      }

      resource "cloudflare_zero_trust_tunnel_cloudflared_config" "example" {
        account_id = var.cloudflare_account_id
        tunnel_id  = cloudflare_zero_trust_tunnel_cloudflared.example.id

        config = {
          ingress_rule = [
            {
              hostname = var.tunnel_hostname
              service  = var.tunnel_service
            },
            {
              service = "http_status:404"
            }
          ]
        }
      }

      output "tunnel_id" {
        value = cloudflare_zero_trust_tunnel_cloudflared.example.id
      }
    vars:
      - key: cloudflare_account_id
        value: { { .Values.cloudflare.accountId | quote } }
      - key: tunnel_name
        value: { { .Values.tunnel.name | quote } }
      - key: tunnel_hostname
        value: { { .Values.tunnel.hostname | quote } }
      - key: tunnel_service
        value: { { .Values.tunnel.service | quote } }
    env:
      - name: TF_VAR_cloudflare_api_token
        secretKeyRef:
          name: cloudflare-tunnel
          key: credential
          namespace: { { .Release.Namespace } }
  writeConnectionSecretToRef:
    name: cloudflare-tunnel-outputs
    namespace: { { .Release.Namespace } }
  providerConfigRef:
    name: default
