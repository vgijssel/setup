apiVersion: tf.upbound.io/v1beta1
kind: Workspace
metadata:
  name: cloudflare-tunnel-workspace
spec:
  forProvider:
    source: Inline
    module: |
      terraform {
        required_providers {
          cloudflare = {
            source = "cloudflare/cloudflare"
            version = "5.9.0"
          }
        }
      }

      variable "cloudflare_api_token" {
        description = "Cloudflare API token"
        type        = string
        sensitive   = true
      }

      provider "cloudflare" {
        api_token = var.cloudflare_api_token
      }

      resource "cloudflare_tunnel" "example" {
        account_id = "{{ .Values.cloudflare.accountId }}"
        name       = "{{ .Values.tunnel.name }}"
        secret     = base64sha256("{{ .Values.tunnel.name }}-secret")
      }

      resource "cloudflare_tunnel_config" "example" {
        account_id = "{{ .Values.cloudflare.accountId }}"
        tunnel_id  = cloudflare_tunnel.example.id

        config {
          ingress_rule {
            hostname = "{{ .Values.tunnel.hostname }}"
            service  = "{{ .Values.tunnel.service }}"
          }
          
          ingress_rule {
            service = "http_status:404"
          }
        }
      }

      output "tunnel_id" {
        value = cloudflare_tunnel.example.id
      }

      output "tunnel_token" {
        value = cloudflare_tunnel.example.tunnel_token
        sensitive = true
      }
    vars:
      - key: cloudflare_api_token
        source: Secret
        secretKeyRef:
          namespace: default
          name: cloudflare-tunnel
          key: credential
  writeConnectionSecretsToRef:
    name: cloudflare-tunnel-outputs
    namespace: default
  providerConfigRef:
    name: default
