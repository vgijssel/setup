load("//tools/packer:defs.bzl", "packer_image")
load("//tools/pyinfra:defs.bzl", "pyinfra_run")
load("//tools/vagrant:defs.bzl", "qcow_to_vagrant_box", "vagrant_run")

packer_image(
    name = "hypervisor_image",
    output_image = "output/hypervisor.qcow2",
    templates = [
        "packer_qemu.pkr.hcl",
        "hypervisor.pkr.hcl",
    ],
    tools = [
        ":provision",
    ],
    variables = {
        "iso_file": "$(location @ubuntu_focal//file)",
        "iso_checksum": "8c8b5acb521f53a32e6ee53505e85d43958e42794c77dbb54dbe797097a63c5d",
        "ssh_username": "packer",
        "ssh_password": "packer",
        "cloud_init_meta_data_file": "$(location cloud-init/meta-data)",
        "cloud_init_user_data_file": "$(location cloud-init/user-data)",
        "provision_script": "$(location :provision)",
    },
    deps = [
        "cloud-init/meta-data",
        "cloud-init/user-data",
        "@ubuntu_focal//file",
    ],
)

qcow_to_vagrant_box(
    name = "hypervisor_image_box",
    src = ":hypervisor_image",
)

vagrant_run(
    name = "hypervisor",
    env = {
        "HYPERVISOR_BOX_PATH": "$(rootpath :hypervisor_image_box)",
        "LOG_DIR": "/tmp",
        "VAGRANT_EXPERIMENTAL": "cloud_init,disks",
    },
    vagrant_runtime = "//tools/vagrant:vagrant_runtime",
    vagrantfile = "Vagrantfile",
    deps = [
        ":hypervisor_image_box",
    ],
)

# TODO: circular dependency. Fix this by splitting up into two pyinfra_runs, one for build and one for dev
# restructure hypervisor files according to https://docs.pyinfra.com/en/latest/deploys.html
# packer -> provision -> vagrant_runtime?
# packer -> provision -> vagrant -> box -> packer
pyinfra_run(
    name = "provision",
    data = [
        "//tools/vagrant:vagrant_runtime",
    ],
    deploy = "deploy.py",
    inventory = "inventory.py",
    pyinfra_runtime = "@hypervisor_deps_pyinfra//:pkg",
)
