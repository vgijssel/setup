---
- name: "Provision Hypervisor"
  hosts: all
  debugger: on_failed
  gather_facts: true
  environment:
    OP_CONNECT_HOST: "{{ op_connect_host }}"
    OP_CONNECT_TOKEN: "{{ op_connect_token }}"
    OP_VAULT_ID: "{{ op_vault_id }}"
  collections:
    - onepassword.connect
  tasks:
    - name: Get DEB architecture
      shell: dpkg --print-architecture
      register: architecture

    - set_fact:
        ubuntu_release: "{{ hostvars[inventory_hostname].ansible_distribution_release }}"
        architecture: "{{ architecture.stdout }}"

    # https://docs.docker.com/engine/install/ubuntu/
    - name: Install docker dependencies
      tags: ["docker"]
      package:
        name: "{{ item }}"
        state: present
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
      become: yes

    - name: Add Docker GPG apt Key
      tags: ["docker"]
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      become: yes

    - name: Add Docker Repository
      tags: ["docker"]
      apt_repository:
        repo: "deb [arch={{ architecture }}] https://download.docker.com/linux/ubuntu {{ ubuntu_release }} stable"
        state: present
      become: yes

    - name: Update apt
      tags: ["docker"]
      apt:
        update_cache: true
      become: yes

    - name: Install docker-ce
      tags: ["docker"]
      apt:
        state: latest
        name: "{{ item }}"
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io
      become: yes

    - name: Install pip
      tags: ["docker"]
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      loop:
        - python3-pip
      become: yes

    - name: Install Ansible docker dependencies
      tags: ["docker"]
      pip:
        name: "{{ item.name }}"
        version: "{{ item.version }}"
        state: present
      with_items:
        - { name: docker, version: 5.0.3 }
      become: yes

    - name: Install OpenNebula dependencies
      tags: ["opennebula"]
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      loop:
        - gnupg
        - wget
        - apt-transport-https
      become: yes

    # https://docs.opennebula.io/6.0/installation_and_configuration/frontend_installation/opennebula_repository_configuration.html#repositories-ce
    - name: Add OpenNebula signing key
      tags: ["opennebula"]
      ansible.builtin.apt_key:
        url: https://downloads.opennebula.io/repo/repo.key
        state: present
      become: yes

    - name: Add OpenNebula repository
      tags: ["opennebula"]
      ansible.builtin.apt_repository:
        repo: deb https://downloads.opennebula.io/repo/6.0/Ubuntu/20.04 stable opennebula
        state: present
        filename: opennebula
      become: yes

    # https://docs.opennebula.io/6.0/installation_and_configuration/frontend_installation/install.html
    - name: Install OpenNebula frontend
      tags: ["opennebula"]
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      loop:
        - opennebula
        - opennebula-sunstone
        - opennebula-fireedge
        - opennebula-gate
        - opennebula-flow
        - opennebula-provision
      become: yes

    - name: Add OpenNebula as docker user
      tags: ["opennebula"]
      ansible.builtin.user:
        name: oneadmin
        groups: docker
        append: yes
      become: yes

    - tags: ["opennebula", "kerk"]
      set_fact:
        mysql_user: oneadmin
        mysql_database: "opennebula"

    # https://docs.opennebula.io/6.0/installation_and_configuration/frontend_installation/database.html#database-setup
    - name: Create mysql Secret
      tags: ["opennebula", "kerk"]
      delegate_to: localhost
      onepassword.connect.generic_item:
        title: OpenNebula MySQL
        state: present
        fields:
          - label: username
            value: "{{ mysql_user }}"
          - label: password
            field_type: concealed
            generate_value: on_create
            generator_recipe:
              length: 32
              include_letters: yes
              include_digits: yes
              include_symbols: no
      no_log: true
      register: result_mysql_secret

    - tags: ["opennebula", "kerk"]
      set_fact:
        mysql_password: "{{ result_mysql_secret.op_item.fields.password.value }}"

    - name: Setup mysql database
      tags: ["opennebula", "kerk"]
      become: yes
      docker_container:
        name: opennebula_mysql
        image: mysql:8.0.27
        recreate: yes
        restart_policy: always
        keep_volumes: yes
        container_default_behavior: no_defaults
        ports:
          - "127.0.0.1:3306:3306"
        volumes:
          - /var/lib/opennebula_mysql:/var/lib/mysql
        env:
          MYSQL_ROOT_PASSWORD: "{{ mysql_password }}"
          MYSQL_PASSWORD: "{{ mysql_password }}"
          MYSQL_USER: "{{ mysql_user }}"
          MYSQL_DATABASE: "{{ mysql_database }}"

    - name: Wait until MySQL is ready
      tags: ["opennebula", "kerk"]
      command: "docker exec opennebula_mysql mysqladmin -u {{ mysql_user }} -p{{ mysql_password }} ping"
      retries: 10
      delay: 10
      register: result
      until: result.rc == 0
      no_log: true
      become: yes

    - name: Setup OpenNebula configuration
      tags: ["opennebula", "kerk"]
      ansible.builtin.template:
        src: oned.conf.j2
        dest: /etc/one/oned.conf
        owner: root
        group: oneadmin
        mode: "0640"
      become: yes

    # TODO: add website here so we can login directly from the browser!
    - name: Create oneadmin Secret
      tags: ["opennebula"]
      delegate_to: localhost
      onepassword.connect.generic_item:
        title: OpenNebula oneadmin
        state: present
        fields:
          - label: username
            value: oneadmin
          - label: password
            field_type: concealed
            generate_value: on_create
            generator_recipe:
              length: 32
              include_letters: yes
              include_digits: yes
              include_symbols: no
      no_log: true
      register: result_oneadmin_secret

    - tags: ["opennebula"]
      set_fact:
        oneadmin_password: "{{ result_oneadmin_secret.op_item.fields.password.value }}"

    - name: Set OpenNebula oneadmin password
      tags: ["opennebula"]
      ansible.builtin.copy:
        content: "oneadmin:{{ oneadmin_password }}"
        dest: /var/lib/one/.one/one_auth
        owner: oneadmin
        group: oneadmin
        mode: "0600"
      become: yes

    # TODO: what to do with the serveradmin?
    # TODO: configure FireEdge
    # TODO: configure OneGate
    # TODO: configure OneFlow

    - name: Make sure OpenNebula is started
      tags: ["opennebula", "kerk"]
      ansible.builtin.systemd:
        state: started
        enabled: yes
        name: "{{ item }}"
      loop:
        - opennebula
        - opennebula-sunstone
        - opennebula-fireedge
        - opennebula-gate
        - opennebula-flow
      become: yes
