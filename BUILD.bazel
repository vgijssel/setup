load("@bazel_skylib//rules:common_settings.bzl", "bool_flag")
load("@rules_task//tools:defs.bzl", "compile_pip_requirements")
load("@rules_task//:defs.bzl", "cmd", "task_test")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_tarball")

package(default_visibility = ["//visibility:public"])

exports_files(["WORKSPACE"])

bool_flag(
    name = "setup_debug_flag",
    build_setting_default = False,
)

config_setting(
    name = "setup_debug",
    flag_values = {
        "//:setup_debug_flag": "True",
    },
)

compile_pip_requirements(
    name = "requirements",
    extra_args = [
        "--allow-unsafe",
    ],
    hidden_args = [
        "--verbose",
    ],
    requirements_in = "requirements.in",
    requirements_txt = "requirements.txt",
)

platform(
    name = "docker_image_platform",
    constraint_values = [
        # "@bazel_tools//platforms:x86_64",
        # "@bazel_tools//platforms:linux",
        "@bazel_tools//tools/cpp:clang",
        "@platforms//os:linux",

        # "@platforms//cpu:aarch64": ["@lefthook_arm64//file"],
        "@platforms//cpu:x86_64",
    ],
    exec_properties = {
        "OSFamily": "Linux",
        # "container-image": "docker://gcr.io/YOUR:IMAGE",
        "container-image": "docker://registry.hub.docker.com/nixos/nix",
    },
)

load("@io_bazel_rules_docker//python3:image.bzl", "py3_image")

py3_image(
    name = "hello",
    srcs = [
        "hello.py",
    ],
    base = "@python38_base_image//image",

    # Currently needs to be built on Linux.
    # target_compatible_with = [
    #     "@platforms//os:linux",
    # ],
    exec_properties = {
        "workload-isolation-type": "firecracker",
        "init-dockerd": "true",
        "recycle-runner": "true",
    },
    main = "hello.py",
)

sh_binary(
    name = "setup_ci",
    srcs = [
        "setup_ci.sh",
    ],
)

load("//tools/python:py_image_layer.bzl", "py_image_layer")

py_binary(
    name = "hello_world",
    srcs = [
        "hello_world.py",
    ],
)

py_image_layer(
    name = "hello_world_layer",
    binary = ":hello_world",
    root = "/opt",
)

oci_image(
    name = "hello_world_image",
    base = "@raw_python38_base_image//:image.tar.gz",
    entrypoint = ["/opt/hello_world"],
    tars = [":hello_world_layer"],
)

oci_tarball(
    name = "hello_world_tarball",
    image = ":hello_world_image",
    repo_tags = ["hello_world:latest"],
)

task_test(
    name = "hello_world_test",
    cmds = [
        "docker load < $TARBALL",
        "docker run --rm  hello_world:latest",
    ],
    env = {
        "TARBALL": cmd.file(":hello_world_tarball"),
    },
    exec_properties = {
        "workload-isolation-type": "firecracker",
        "init-dockerd": "true",
        "recycle-runner": "true",
    },
)
