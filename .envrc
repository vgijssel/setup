# Only if the CI variable does not exist
# If NOT on the CI, executing on local machine
if [ -z "${CI+x}" ]; then
  export CI=false
fi

export CI_SEMAPHORE=false
export CI_GITHUB=false

if [[ "${CI}" = true ]]; then
  export CI=true

  # If NOT semaphore ci use the Github ref
  if [ -z "${SEMAPHORE_GIT_REF+x}" ]; then
      export GIT_REF="$GITHUB_REF"
      export GIT_BRANCH="${GITHUB_REF#refs/heads/}"
      export CI_GITHUB=true
  else
      export GIT_REF="$SEMAPHORE_GIT_REF"
      export GIT_BRANCH="$SEMAPHORE_GIT_BRANCH"
      export CI_SEMAPHORE=true
  fi

  export GOPATH="$HOME/go"

  # Disable checking for hosts key on the CI
  export ANSIBLE_HOST_KEY_CHECKING=False
else
  export CI=false

  # Only set the GITHUB REF locally (not in the CI)
  export GIT_REF="refs/heads/$(git rev-parse --abbrev-ref HEAD)"

  export ANSIBLE_HOST_KEY_CHECKING=True
fi

export DOCKER_BUILDKIT=0

export SETUP_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
export DEVELOPMENT_DIR="$(dirname $SETUP_DIR)"
export SETUP_TMP_DIR="${SETUP_DIR}/tmp"
export SETUP_DOTFILES_DIR="${SETUP_DIR}/dotfiles"

# Ensure gnutar tar binary is in front of the path
export PATH=\
"/usr/local/opt/gnu-tar/libexec/gnubin:"\
"${PATH}"
