load("//tools/pyinfra:defs.bzl", "pyinfra_run")
load("@rules_task//:defs.bzl", "cmd", "task")
load("//tools/docker:docker.bzl", "docker_load_and_run")

pyinfra_run(
    name = "provision",
    srcs = [
        "deploys/microk8s/tasks/install_microk8s.py",
        "deploys/network/tasks/install_network.py",
    ],
    args = [
        "--data install_network=True",
        "--data install_microk8s=True",
    ],
    data = [
        "deploys/microk8s/files/cmdline.txt",
        "deploys/network/files/99_config.yaml",
    ],
    deploy = "deploy.py",
    inventory = "inventory.py",
)

docker_load_and_run(
    name = "dev_image_run",
    command = "/sbin/init",
    docker_args = [
        "--rm",
        "--detach",
        "--tmpfs /run",
        "--tmpfs /run/lock",
        "--tmpfs /tmp",
        "--privileged",
        "-v /lib/modules:/lib/modules:ro",
    ],
    image = "//tools/ubuntu:ubuntu_snap_base_image",
)

task(
    name = "dev",
    cmds = [
        "CONTAINER_ID=$($run_dev_image)",
        {"defer": "docker rm -f $CONTAINER_ID"},
        "docker logs -f $CONTAINER_ID",
    ],
    env = {
        "run_dev_image": cmd.executable(":dev_image_run"),
    },
)
