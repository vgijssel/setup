external_components:
  - source:
      type: local
      path: ../../esphome_nimble/components

esphome:
  includes:
    - http_client.h

mqtt:
  broker: !secret mqtt_broker
  username: esphome
  password: !secret mqtt_password
  discovery: false
  id: mqtt_client
  reboot_timeout: 0s
  log_topic:
    topic: "doesnotmatter"
    level: NONE

nimble_tracker:
  scan_parameters:
    window: 100ms
    interval: 100ms
    active: false

globals:
  - id: room_topic
    type: std::string
    initial_value: '"room_presence/rooms/${room_name}"'

sensor:
  # - platform: nimble_distance
  #   id: apple_watch_1_distance
  #   irk: !secret apple_watch_1_irk
  #   internal: true
  #   on_value:
  #     then:
  #       - lambda: |-
  #           id(mqtt_client)->publish_json(id(room_topic), [=](ArduinoJson::JsonObject root) -> void {
  #             root["id"] = "apple_watch_1";
  #             root["distance"] = id(apple_watch_1_distance).state;
  #           });

  - platform: nimble_rssi
    id: apple_watch_1_rssi
    irk: !secret apple_watch_1_irk
    internal: true
    # From https://github.com/dalehumby/ESPHome-Apple-Watch-detection/blob/main/lounge.yaml#L80
    filters:
      - exponential_moving_average:
          alpha: 0.3
          send_every: 5
    on_value:
      then:
        # From https://github.com/espressif/esp-idf/blob/3df87a91a3c876d6ef654e68b66f4939080fa1fc/examples/protocols/esp_http_client/main/esp_http_client_example.c
        - lambda: |-
            do_request(id(apple_watch_1_rssi).state);
