substitutions:
  device_name: "supply-closet-shelly"
  entity_id: "supply_closet_shelly"
  room_name: "living_room"

packages:
  device_base: !include .shelly-1pm-plus.yaml
  base: !include .base.yaml

binary_sensor:
  - <<: !include .basic_light_binary_sensor.yaml
    name: ${entity_id}_input
    pin: GPIO4

external_components:
  - source:
      type: local
      path: /esphome_nimble/components

mqtt:
  broker: !secret mqtt_broker
  username: esphome
  password: !secret mqtt_password
  discovery: false
  id: mqtt_client

nimble_tracker:
  scan_parameters:
    window: 100ms
    interval: 100ms
    active: false

globals:
  - id: room_topic
    type: std::string
    initial_value: '"room_presence/${room_name}"'

sensor:
  - platform: nimble_distance
    irk: !secret apple_watch_irk
    id: apple_watch_distance
    internal: true
    # TODO: should we retain the mqtt message?
    on_value:
      then:
        - lambda: |-
            id(mqtt_client)->publish_json(id(room_topic), [=](ArduinoJson::JsonObject root) -> void {
              root["id"] = "apple_watch";
              root["name"] = "Apple Watch";
              root["distance"] = id(apple_watch_distance).state;
            });