substitutions:
  device_name: "bathroom-shelly"

esphome:
  name: ${device_name}

esp8266:
  board: esp01_1m

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_encryption_key 

ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    password: !secret wifi_password

captive_portal:

#==============================================================

.light_toggle: &light_toggle
  # small delay to prevent debouncing
  # config for state change of input button
  filters:
    - delayed_on_off: 50ms

  on_state:
      then:
        - if:
            condition:
              and:
                - wifi.connected:
                - api.connected:
                - switch.is_on: shelly_relay
            # toggle smart light if wifi and api are connected and relay is on
            then:
              - homeassistant.service:
                  service: light.toggle
                  data:
                    entity_id: light.bathroom_lights
            # else, toggle relay
            else:
              - switch.toggle: shelly_relay


switch:
  - platform: gpio
    name: ${device_name}
    pin: GPIO5
    id: shelly_relay
    # after reboot, keep the relay off. this prevents light turning on after a power outage
    restore_mode: ALWAYS_OFF

binary_sensor:
  - platform: gpio
    name: ${device_name} Input 1
    pin:
      number: GPIO4
    <<: *light_toggle
  - platform: gpio
    name: ${device_name} Input 2
    pin:
      number: GPIO14
    <<: *light_toggle