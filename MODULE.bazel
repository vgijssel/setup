"""
All the dependencies for setup.
"""

module(
    name = "setup",
    version = "1.0",
    repo_name = "setup",
)

# ------------------------------------ platforms ------------------------------------ #
bazel_dep(name = "platforms", version = "0.0.6")

# ------------------------------------ rules_skylib ------------------------------------ #
bazel_dep(name = "bazel_skylib", version = "1.4.1")

# ------------------------------------ rules_pkg ------------------------------------ #
bazel_dep(name = "rules_pkg", version = "0.7.0")

# ------------------------------------ rules_task ------------------------------------ #
bazel_dep(name = "rules_task", version = "0.1.0")
local_path_override(
    module_name = "rules_task",
    path = "./rules/rules_task",
)

# ------------------------------------ rules_python ------------------------------------ #
bazel_dep(name = "rules_python", version = "0.20.0")

python = use_extension("@rules_python//python:extensions.bzl", "python")
python.toolchain(
    name = "python3",
    python_version = "3.10.8",
)
use_repo(python, "python3_toolchains")
use_repo(python, "python3")
use_repo(python, "python3_aarch64-unknown-linux-gnu")
use_repo(python, "python3_x86_64-unknown-linux-gnu")

# NOTE: custom extension so we can reference the hermetic python interpreter in the pip.parse rules
# Can be removed once https://github.com/bazelbuild/rules_python/issues/1058 is solved.
python_interpreter = use_extension(":extensions.bzl", "python_interpreter")
use_repo(python_interpreter, "python_interpreter")

register_toolchains(
    "@python3_toolchains//:all",
)

pip = use_extension("@rules_python//python:extensions.bzl", "pip")
pip.parse(
    name = "pip-setup",
    python_interpreter_target = "@python_interpreter//:python",
    requirements_lock = "//:requirements.txt",
)
use_repo(pip, "pip-setup")

# ------------------------------------ rules_js ------------------------------------ #
bazel_dep(name = "aspect_rules_js", version = "1.27.0")
bazel_dep(name = "rules_nodejs", version = "5.8.2")

node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node")
node.toolchain(node_version = "17.9.1")

pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm")
pnpm.pnpm(
    name = "pnpm-setup",
)
use_repo(pnpm, "pnpm-setup")

npm = use_extension(
    "@aspect_rules_js//npm:extensions.bzl",
    "npm",
    dev_dependency = True,
)
npm.npm_translate_lock(
    name = "npm",
    npmrc = "@@//:.npmrc",
    pnpm_lock = "//:pnpm-lock.yaml",
    verify_node_modules_ignored = "//:.bazelignore",
)
use_repo(npm, "npm")

# ------------------------------------ buildifier ------------------------------------ #
# NOTE: don't upgrade to 6.1.0 because this has a bug where tests always pass
bazel_dep(name = "buildifier_prebuilt", version = "6.0.0.1")
