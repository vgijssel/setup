version: "3"

includes:
  services:windmill:
    taskfile: ./services/windmill/Taskfile.yml
    dir: ./services/windmill

  services:tinkerbell:
    taskfile: ./services/tinkerbell/Taskfile.yml
    dir: ./services/tinkerbell

tasks:
  devenv:secrets:
    desc: Install secrets for the devenv
    cmds:
      - op inject --force --in-file=.op.env --out-file=.env
      - op read --force --out-file $HOME/.kube/provisioner-k8s.config "op://vgijssel-prod/provisioner-k8s-kubeconfig/certificate"
    sources:
      - .op.env

  devenv:setup:
    desc: Install dependencies for the devenv
    cmds:
      - helmfile init

  # TODO: No longer necessary after https://github.com/mkdocs-publisher/mkdocs-publisher/pull/110
  docs:check:
    desc: Check if necessary requirements are installed
    cmds:
      - djpeg -version
      - cjpeg -version
      - jpegtran -version

  docs:serve:
    desc: Development server for the docs
    deps:
      - docs:check
    cmds:
      - mkdocs serve -a localhost:8000

  docs:build:
    desc: Build the docs
    deps:
      - docs:check
    cmds:
      - mkdocs build

  docs:publish:
    desc: Publish the docs
    deps:
      - docs:check
    cmds:
      - mkdocs gh-deploy --clean

  provisioner:provision:
    desc: Provision the provisioner
    dir: ansible
    cmds:
      - ansible-playbook -i production provisioner.yml --diff {{.CLI_ARGS}}

  provisioner:provision:local:
    desc: Provision the provisioner using the local inventory
    dir: ansible
    cmds:
      - ansible-playbook -i production.local provisioner.yml --diff {{.CLI_ARGS}}

  provisioner-k8s:provision:
    desc: Provision the provisioner kubernetes cluster instance
    dir: ansible
    cmds:
      - ansible-playbook -i production provisioner-k8s.yml --diff {{.CLI_ARGS}}

  provisioner-k8s:provision:local:
    desc: Provision the provisioner kubernetes cluster instance using the local inventory
    dir: ansible
    cmds:
      - ansible-playbook -i production.local provisioner-k8s.yml --diff {{.CLI_ARGS}}

  pikvm:provision:
    desc: Provision the PiKVM
    dir: ansible
    cmds:
      - ansible-playbook -i production pikvm.yml --diff {{.CLI_ARGS}}

  pikvm:provision:local:
    desc: Provision the PiKVM using the local inventory
    dir: ansible
    cmds:
      - ansible-playbook -i production.local pikvm.yml --diff {{.CLI_ARGS}}

  tools:spacelift:build:
    desc: Build and push the Spacelift image
    dir: tools/spacelift
    cmds:
      - docker build --platform="linux/amd64" -t ghcr.io/vgijssel/setup/spacelift-runner-ansible:latest .
      - docker push ghcr.io/vgijssel/setup/spacelift-runner-ansible:latest

  images:pikvm:prepare_disk:
    desc: Download and extract the PiKVM disk image
    dir: images
    cmds:
      - packer build -only='prepare_disk.*' -on-error=ask .

  images:pikvm:build:
    desc: Build an Incus container from the PiKVM disk image
    dir: images
    cmds:
      - packer build -only='build_image.*' -on-error=ask .
