version: "3"

tasks:
  devenv:install:
    desc: Install dependencies for the devenv
    dir: devenv
    env:
      PDM_IGNORE_ACTIVE_VENV: 1
    cmds:
      - pdm install
    sources:
      - pyproject.toml
      - pdm.lock

  devenv:provision:
    desc: Provision the devenv
    dir: devenv
    deps:
      - devenv:install
    cmds:
      - pdm run pyinfra inventory.py deploy.py -y {{.ARGS}}
    vars:
      DEFAULT_ARGS: --data install_editor=True
        --data install_terminal=True
        --data install_languages=True
        --data install_ssh=True
        --data install_utilities=True
        --data install_workflow=True
      ARGS: "{{default .DEFAULT_ARGS .CLI_ARGS}}"

  provisioner:provision:
    desc: Provision the provisioner
    dir: ansible
    cmds:
      - ansible-playbook -i production provisioner.yml {{.CLI_ARGS}}

  tools:spacelift:build:
    desc: Build and push the Spacelift image
    dir: tools/spacelift
    cmds:
      - docker build --platform="linux/amd64" -t ghcr.io/vgijssel/setup/spacelift-runner-ansible:latest .
      - docker push ghcr.io/vgijssel/setup/spacelift-runner-ansible:latest

  incus-images:pikvm:prepare_disk:
    desc: Download and extract the PiKVM disk image
    dir: incus-images
    cmds:
      - packer build -only='prepare_disk.*' -on-error=ask .

  incus-images:pikvm:build:
    desc: Build an Incus container from the PiKVM disk image
    dir: incus-images
    cmds:
      - packer build -only='build_image.*' -on-error=ask .
