load("@rules_python//python:defs.bzl", "py_binary")
load("@rules_task//:defs.bzl", "cmd", "task", "task_test")
load("//tools/python:defs.bzl", "py_image", "requirement")

py_binary(
    name = "list_user_binary",
    srcs = ["@bunq2ynab//:list_user.py"],
    main = "list_user.py",
    deps = [
        "@bunq2ynab//:lib",
        requirement("requests"),
        requirement("pyopenssl"),
    ],
)

py_binary(
    name = "list_budget_binary",
    srcs = ["@bunq2ynab//:list_budget.py"],
    main = "list_budget.py",
    deps = [
        "@bunq2ynab//:lib",
        requirement("requests"),
        requirement("pyopenssl"),
    ],
)

py_binary(
    name = "bunq2ynab_binary",
    srcs = ["@bunq2ynab//:bunq2ynab.py"],
    main = "bunq2ynab.py",
    deps = [
        "@bunq2ynab//:lib",
        requirement("requests"),
        requirement("pyopenssl"),
    ],
)

task(
    name = "list_user",
    cmds = [
        "export CONFIG_FILE=$(pwd)/config.json",
        "$OP inject --in-file=$CONFIG_FILE_TPL --out-file=$CONFIG_FILE --force",
        {"defer": "rm -rf $CONFIG_FILE"},
        "$BINARY --config $CONFIG_FILE",
    ],
    env = {
        "BINARY": cmd.executable("list_user_binary"),
        "OP": cmd.executable("//tools/onepassword:op"),
        "CONFIG_FILE_TPL": cmd.file("config.json.tpl"),
    },
)

task_test(
    name = "list_user_test",
    cmds = [
        "export OP_SERVICE_ACCOUNT_TOKEN=$ONEPASSWORD_SERVICE_ACCOUNT_TOKEN_DEV",
        cmd.executable("list_user"),
    ],
)

task(
    name = "list_budget",
    cmds = [
        "export CONFIG_FILE=$(pwd)/config.json",
        "$OP inject --in-file=$CONFIG_FILE_TPL --out-file=$CONFIG_FILE --force",
        {"defer": "rm -rf $CONFIG_FILE"},
        "$BINARY --config $CONFIG_FILE",
    ],
    env = {
        "BINARY": cmd.executable("list_budget_binary"),
        "OP": cmd.executable("//tools/onepassword:op"),
        "CONFIG_FILE_TPL": cmd.file("config.json.tpl"),
    },
)

task(
    name = "bunq2ynab",
    cmds = [
        "export CONFIG_FILE=$(pwd)/config.json",
        "$OP inject --in-file=$CONFIG_FILE_TPL --out-file=$CONFIG_FILE --force",
        {"defer": "rm -rf $CONFIG_FILE"},
        "$BINARY --config $CONFIG_FILE",
    ],
    env = {
        "BINARY": cmd.executable("bunq2ynab_binary"),
        "OP": cmd.executable("//tools/onepassword:op"),
        "CONFIG_FILE_TPL": cmd.file("config.json.tpl"),
    },
)

py_binary(
    name = "generate_oauth_token_binary",
    srcs = ["@bunq2ynab//:generate_oauth_token.py"],
    main = "generate_oauth_token.py",
    deps = [
        "@bunq2ynab//:lib",
        requirement("requests"),
        requirement("pyopenssl"),
    ],
)

task(
    name = "generate_oauth_token",
    cmds = [
        "export CLIENT_ID=$($OP read op://vgijssel-dev/bunq2ynab_oauth/username)",
        "export CLIENT_SECRET=$($OP read op://vgijssel-dev/bunq2ynab_oauth/credential)",
        "$BINARY --oauth-client-id $CLIENT_ID --oauth-client-secret $CLIENT_SECRET",
    ],
    env = {
        "BINARY": cmd.executable("generate_oauth_token_binary"),
        "OP": cmd.executable("//tools/onepassword:op"),
    },
)

py_image(
    name = "bunq2ynab_image",
    base = "@python310_base_image//:image.tar.gz",
    binary = ":bunq2ynab",
    host_container_platform = "//:host_container_platform",
    prefix = "opt/",
)

task(
    name = "bunq2ynab_image_run",
    cmds = [
        cmd.executable("bunq2ynab_image.load"),
        "docker run --rm --env OP_SERVICE_ACCOUNT_TOKEN=$ONEPASSWORD_SERVICE_ACCOUNT_TOKEN_DEV -it --entrypoint='' bunq2ynab:latest $CLI_ARGS",
    ],
)

task_test(
    name = "bunq2ynab_image_test",
    cmds = [
        cmd.executable("bunq2ynab_image.load"),
        "docker run --rm --env OP_SERVICE_ACCOUNT_TOKEN=$ONEPASSWORD_SERVICE_ACCOUNT_TOKEN_DEV bunq2ynab:latest",
    ],
    exec_properties = {
        "workload-isolation-type": "firecracker",
        "init-dockerd": "true",
        "recycle-runner": "true",
    },
)
