# Make a string into safe to be used into a build label
def build_label_encode(string:str) -> str:
    return string.replace("/", "_").replace(":", "_").replace(".", "_").replace("|", "_")

def shell_script_header(script_build_label:str, paths:list = []) -> str:
    path_string = "$PATH"

    for path in paths:
        path_dir = f"$PLEASE_ROOT/$(dirname $(out_location {path}))"
        path_string = f"{path_dir}:{path_string}"

    script = f"""
set -Eeou pipefail
# Store the out directory of the script
# e.g. plz-out/bin/tools/ssh
FILE_DIR="$(dirname $(out_location {script_build_label}))"

# Get the absolute directory of the current file
# From https://stackoverflow.com/a/4774063
# e.g. /home/user/setup/plz-out/bin/tools/ssh
ABSOLUTE_FILE_DIR="$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"

# Remove "/" + the out directory from the absolute path of the current file
# From https://stackoverflow.com/a/16623897
# e.g. /home/user/setup
export PLEASE_ROOT="${ABSOLUTE_FILE_DIR%"/$FILE_DIR"}"

# Add additional tools to the PATH
export PATH="{path_string}"
    """

    return script
