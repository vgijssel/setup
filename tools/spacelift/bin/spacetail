#!/bin/bash
#
# Helper script to control tailscale whilst playing nicely with Spacelift
# Copied from https://github.com/caius/spacelift-tailscale

[[ -n ${TRACE} ]] && set -o xtrace
set -o errexit
set -o nounset
set -o pipefail
set -o noclobber

usage() {
	echo "Usage: ${0} <up|down>"
}

if [[ -z ${TF_VAR_spacelift_workspace_root-} ]]; then
	echo "spacetail: TF_VAR_spacelift_workspace_root not set but expected"
	usage
	exit 1
fi

if [[ -z ${TS_AUTH_KEY-} ]]; then
	echo "spacetail: TS_AUTH_KEY not set but expected"
	usage
	exit 1
fi

if [[ -z ${1-} ]]; then
	echo "spacetail: Action not set but expected"
	usage
	exit 1
fi

ACTION="${1-}"
readonly ACTION

if [[ -z ${TS_EXTRA_ARGS-} ]]; then
	TS_EXTRA_ARGS="--accept-dns=false --hostname=spacelift-$(hostname)"
fi
readonly TS_EXTRA_ARGS

if [[ -z ${TS_TAILSCALED_EXTRA_ARGS-} ]]; then
	TS_TAILSCALED_EXTRA_ARGS="--socks5-server=localhost:1080 --outbound-http-proxy-listen=localhost:8080"
fi
readonly TS_TAILSCALED_EXTRA_ARGS

if [[ ${ACTION} == "up" ]]; then
	echo "spacetail: Bringing tailscale up"

	# With massive thanks to containerboot
	# https://github.com/tailscale/tailscale/blob/main/cmd/containerboot/main.go

	# shellcheck disable=SC2086
	nohup tailscaled \
		--state=mem: --statedir="${TF_VAR_spacelift_workspace_root}/tailscale-state" \
		--tun=userspace-networking \
		${TS_TAILSCALED_EXTRA_ARGS} 2>/home/spacelift/tailscaled.log &

	sleep 1 # FIXME: grep tailscaled output somehow instead of this?

	# shellcheck disable=SC2086
	tailscale up \
		--authkey "${TS_AUTH_KEY}" \
		${TS_EXTRA_ARGS}
	echo "spacetail: Tailscale up"
elif [[ ${ACTION} == "down" ]]; then
	echo "spacetail: Taking tailscale down"
	# Stopping tailscaled brings the ephemeral node down cleanly
	pkill tailscaled
	echo "spacetail: Tailscale down"
else
	echo "spacetail: Unknown action ${ACTION}"
	usage
	exit 1
fi
