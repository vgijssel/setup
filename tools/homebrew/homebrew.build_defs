JQ = "//tools/homebrew:jq"
REGCTL = "//tools/homebrew:regctl"

# TODO: allow to define entrypoints so these can be accessed directly from this build rule
# if there is only one entrypoint (or none defined) export the single binary directly
def homebrew_bottle(name:str, version:str, visibility:list = None, test_only:bool = False):
    """Build rule to download a binary (bottle) from Homebrew

    Currently only works for Homebrew core packages because those are available through 
    the GitHub container registry. This approach currently does not work for dependencies that rely on 
    system libraries to be present like sqlite3.
    """

    genrule(
        name = name,
        outs = [
            name,
        ],
        cmd = f"""
        set -Eeou pipefail

        # List the available tags in the GitHub container registry for the given package
        # and sort them in reverse order (descending)
        AVAILABLE_VERSIONS="$($TOOLS_REGCTL tag ls ghcr.io/homebrew/core/{name} | sort -r)"

        # Check if the requested version is in there.
        # NOTE: Version 8.32 will also match "8.32-2" because some tags are no 1:1 of the version numbers.
        TAG_VERSION=$(echo "$AVAILABLE_VERSIONS" | (grep "{version}" || true) | head -n 1)

        if [[ -z "$TAG_VERSION" ]]; then
            echo "Version {version} for {name} is not available."
            echo "Available versions are: $AVAILABLE_VERSIONS"
            exit 1
        fi

        # Download the manifest for the specific image tag and extract the digest sha of the first layer
        # AFAIK the containers stored on GitHub for Homebrew only have a single layer.
        LAYER_DIGEST=$($TOOLS_REGCTL manifest get ghcr.io/homebrew/core/{name}:$TAG_VERSION | $TOOLS_JQ -r ".layers[0].digest")

        # Download the particular layer to the local filesystem and store it in a tarball
        $TOOLS_REGCTL layer get ghcr.io/homebrew/core/{name} $LAYER_DIGEST > layer.tar

        # Extract the tarball to get the actual contents of the Homebrew bottle
        mkdir -p layer
        mkdir -p $OUTS
        tar xvf layer.tar -C layer
        cp -v layer/{name}/{version}/bin/* $OUTS
        """,
        tools = {
            "regctl": REGCTL,
            "jq": JQ,
        },
        visibility = visibility,
        test_only = test_only,
    )