version: "3"

tasks:
  debug:
    desc: Run a debug pod with elevated privileges
    interactive: true
    cmds:
      - kubectl -n kube-system debug node/the-toy-factory --image ubuntu --profile sysadmin -it
    preconditions:
      - sh: "kubie info ctx"
        msg: "Make sure to be in a kubie shell"

  reset:
    prompt: This will wipe the cluster and reset Talos nodes. Are you sure?
    desc: Reset the cluster to start a fresh Talos install
    cmds:
      - talosctl reset --system-labels-to-wipe STATE --system-labels-to-wipe EPHEMERAL -n 192.168.1.42 -e 192.168.1.42 --reboot --graceful=false --wait=false
      - talosctl reset --system-labels-to-wipe STATE --system-labels-to-wipe EPHEMERAL -n 192.168.1.41 -e 192.168.1.41 --reboot --graceful=false --wait=false
      - talosctl reset --system-labels-to-wipe STATE --system-labels-to-wipe EPHEMERAL -n 192.168.1.40 -e 192.168.1.40 --reboot --graceful=false --wait=false
      - # wait for the nodes to come back online (using wait-for-it?)
      - # run the bootstrap script on 192.168.1.40

  # - validate internet connectivity (maybe separate goss?)
  # TODO: create start / stop service for rook relay
  validate:
    desc: Validate Cluster Health
    cmds:
      - goss validate

  reboot:
    desc: Reboot Talos nodes
    cmds:
      - talosctl reboot -n 192.168.1.40,192.168.1.41,192.168.1.42

  shutdown:
    desc: Shutdown Talos nodes
    cmds:
      - talosctl shutdown -n 192.168.1.40,192.168.1.41,192.168.1.42

  generate:
    aliases: [gen, g]
    desc: Generate the Talos configuration files
    cmds:
      - talosctl gen config --with-secrets secrets.yaml  enigma https://192.168.1.50:6443 --output-types talosconfig -o talosconfig --force
      - talosctl config endpoint 192.168.1.40 # Best practice: DON'T use the kube-vip ip here
      - talosctl config nodes 192.168.1.40 192.168.1.41 192.168.1.42
      - talosctl gen config --with-secrets secrets.yaml --config-patch @all.patch.yaml --config-patch @the-toy-factory.patch.yaml --output-types controlplane -o the-toy-factory.yaml enigma https://192.168.1.50:6443 --force
      - talosctl gen config --with-secrets secrets.yaml --config-patch @all.patch.yaml --config-patch @the-dome.patch.yaml --output-types controlplane -o the-dome.yaml enigma https://192.168.1.50:6443 --force
      - talosctl gen config --with-secrets secrets.yaml --config-patch @all.patch.yaml --config-patch @illusion.patch.yaml --output-types controlplane -o illusion.yaml enigma https://192.168.1.50:6443 --force
    sources:
      - all.patch.yaml
      - the-toy-factory.patch.yaml
      - the-dome.patch.yaml
      - illusion.patch.yaml
    generates:
      - the-toy-factory.yaml
      - the-dome.yaml
      - illusion.yaml
      - talosconfig
      - ~/.kube/configs/enigma.yaml 

  apply:bootstrap:
    desc: Apply initial configuration to nodes
    deps:
      - generate
    cmds:
      - talosctl apply-config --insecure -n {{.THE_TOY_FACTORY_IP}} --file the-toy-factory.yaml
      - talosctl apply-config --insecure -n {{.THE_DOME_IP}} --file the-dome.yaml
      - talosctl apply-config --insecure -n {{.ILLUSION_IP}} --file illusion.yaml
      # TODO: use goss validate for this instead!
      # On a fresh install can take a while for the nodes to come up
      - wait-for-it --service 192.168.1.40:50000 --timeout 300
      # TODO: wait until etcd is ready for cluster forming
      - sleep 30
      - talosctl bootstrap -n 192.168.1.40 -e 192.168.1.40
      - talosctl kubeconfig --force -n 192.168.1.50 ~/.kube/configs/enigma.yaml
      - # TODO: wait until all three nodes are listed in kubectl get nodes
      - # TODO: wait until all the scheduler, controller-manager, and kube-apiserver pods are running in all nodes
    requires:
      vars: [THE_TOY_FACTORY_IP, THE_DOME_IP, ILLUSION_IP]

  apply:
    prompt: This might break kube-ovn, are you sure?
    desc: Apply the configuration to the nodes
    deps:
      - generate
    cmds:
      - talosctl apply-config -n 192.168.1.40 --file the-toy-factory.yaml
      - talosctl apply-config -n 192.168.1.41 --file the-dome.yaml
      - talosctl apply-config -n 192.168.1.42 --file illusion.yaml
      - talosctl upgrade-k8s -n 192.168.1.40

  apply:try:
    desc: Try a configuration change for a single node which automatiacally reverts after 1 minute
    deps:
      - generate
    cmds:
      # - talosctl apply-config -n 192.168.1.40 --mode try --timeout 1m --file the-toy-factory.yaml
      - talosctl apply-config -n 192.168.1.40,192.168.1.41,192.168.1.42 --mode try --timeout 3m --file the-toy-factory.yaml

  apply:network:
    desc: Apply Kube-OVN network configuration
    cmds:
      - kustomize build $SERVICES_DIR/kube-ovn --enable-helm | kubectl apply -f -
      # TODO: wait until kubectl get nodes is ready

  apply:testing:
    desc: Apply Kube-OVN network configuration
    cmds:
      - kustomize build $SERVICES_DIR/testing --enable-helm | kubectl apply -f -