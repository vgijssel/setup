substitutions:
  device_name: "bathroom-shelly"
  entity_id: "bathroom_shelly"
  light_entity_id: "light.bathroom_lights"
  static_ip: "192.168.1.61"

packages:
  device_base: !include .shelly-1l.yaml
  base: !include .base.yaml
  # smart_light_restore: !include .smart_light_restore.yaml

binary_sensor:
  - platform: homeassistant
    id: bathroom_all_lights
    entity_id: input_boolean.bathroom_all_lights
    # input1 is the right button and used for switching scenes
  - name: ${entity_id}_input_1
    pin: GPIO4
    platform: gpio
    on_state:
      then:
        - if:
            condition:
              and:
                - wifi.connected:
                - api.connected:
                - switch.is_on: shelly_relay
            # toggle smart light if wifi and api are connected and relay is on
            then:
              - if:
                  condition:
                    binary_sensor.is_on: "bathroom_all_lights"
                  then:
                    - homeassistant.service:
                        service: input_boolean.turn_off
                        data:
                          entity_id: input_boolean.bathroom_all_lights
                    - homeassistant.service:
                        service: scene.turn_on
                        data:
                          entity_id: scene.bathroom_shower_lights
                  else:
                    - homeassistant.service:
                        service: input_boolean.turn_on
                        data:
                          entity_id: input_boolean.bathroom_all_lights
                    - homeassistant.service:
                        service: scene.turn_on
                        data:
                          entity_id: scene.bathroom_all_lights
            # else, toggle relay
            else:
              - switch.toggle: shelly_relay
    filters:
      - delayed_on_off: 50ms
    # input2 is the left button and used for on/off
  - name: ${entity_id}_input_2
    pin: GPIO14
    platform: gpio
    on_state:
      then:
        - if:
            condition:
              and:
                - wifi.connected:
                - api.connected:
                - switch.is_on: shelly_relay
            # toggle smart light if wifi and api are connected and relay is on
            then:
              - if:
                  condition:
                    binary_sensor.is_off: "light_sensor"
                  then:
                    - if:
                        condition:
                          binary_sensor.is_on: "bathroom_all_lights"
                        then:
                          - homeassistant.service:
                              service: scene.turn_on
                              data:
                                entity_id: scene.bathroom_all_lights
                        else:
                          - homeassistant.service:
                              service: scene.turn_on
                              data:
                                entity_id: scene.bathroom_shower_lights
                  else:
                    - homeassistant.service:
                        service: homeassistant.turn_off
                        data:
                          entity_id: ${light_entity_id}
            # else, toggle relay
            else:
              - switch.toggle: shelly_relay
    filters:
      - delayed_on_off: 50ms
  - platform: homeassistant
    id: light_sensor
    entity_id: ${light_entity_id}
