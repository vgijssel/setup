update_sensor:
  name: Update Sensor Variable
  description: Update a Sensor Variable value and/or its attributes.
  target:
    entity:
      integration: variable
      domain: sensor
  fields:
    value:
      name: New Value
      description: "New value to set. If a device class and native unit of measurement is set: 1. This will update the value in the native unit of measurement not necessarily the displayed unit of measurement if they are different. 2. It will give an error if the value is not a supported type for the device class (ex. setting a string for a temperature device class) (optional)"
      example: 9
      selector:
        text:
    attributes:
      name: New Attributes
      description: Attributes to set or update [dictionary] (optional)
      example: "{'key': 'value'}"
      selector:
        object:
    replace_attributes:
      name: Replace Attributes
      description: Replace or merge current attributes [boolean] (optional) (default false = merge)
      required: false
      default: false
      example: "false"
      selector:
        boolean:

update_binary_sensor:
  name: Update Binary Sensor Variable
  description: Update a Binary Sensor Variable value and/or its attributes.
  target:
    entity:
      integration: variable
      domain: binary_sensor
  fields:
    value:
      name: New Value
      description: New value to set [boolean] (optional)
      required: false
      example: "false"
      selector:
        select:
          mode: list
          translation_key: "boolean_options"
          options:
            - "None"
            - "true"
            - "false"
    attributes:
      name: New Attributes
      description: Attributes to set or update [dictionary] (optional)
      example: "{'key': 'value'}"
      selector:
        object:
    replace_attributes:
      name: Replace Attributes
      description: Replace or merge current attributes [boolean] (optional) (default false = merge)
      required: false
      default: false
      example: "false"
      selector:
        boolean:

update_device_tracker:
  name: Update Device Tracker (GPS) Variable
  description: Update a Device Tracker (GPS) Variable.
  target:
    entity:
      integration: variable
      domain: device_tracker
  fields:
    latitude:
      name: Latitude
      description: New Latitude
      example: 38.889466
      selector:
        number:
          min: -90
          max: 90
          step: "any"
          unit_of_measurement: "°"
          mode: box
    longitude:
      name: Longitude
      description: New Longitude
      example: -77.035235
      selector:
        number:
          min: -180
          max: 180
          step: "any"
          unit_of_measurement: "°"
          mode: box
    location_name:
      name: Location Name
      description: New Location Name
      example: "School"
      selector:
        text:
    delete_location_name:
      name: Delete Location Name
      description: Remove the Location Name so state will be based on Lat/Long
      selector:
        constant:
          label: Will Delete
          value: true
    gps_accuracy:
      name: GPS Accuracy
      description: New GPS Accuracy
      example: 5
      selector:
        number:
          min: 0
          max: 1000000
          step: 1
          unit_of_measurement: "m"
          mode: box
    battery_level:
      name: Battery Level
      description: New Battery Level
      example: 99
      selector:
        number:
          min: 0
          max: 100
          step: 1
          unit_of_measurement: "%"
          mode: box
    attributes:
      name: New Attributes
      description: Attributes to set or update [dictionary] (optional)
      example: "{'key': 'value'}"
      selector:
        object:
    replace_attributes:
      name: Replace Attributes
      description: Replace or merge current attributes [boolean] (optional) (default false = merge)
      required: false
      default: false
      example: "false"
      selector:
        boolean:

toggle_binary_sensor:
  name: Toggle Binary Sensor Variable
  description: Toggle a Binary Sensor Variable value and optionally Update its attributes.
  target:
    entity:
      integration: variable
      domain: binary_sensor
  fields:
    attributes:
      name: New Attributes
      description: Attributes to set or update [dictionary] (optional)
      example: "{'key': 'value'}"
      selector:
        object:
    replace_attributes:
      name: Replace Attributes
      description: Replace or merge current attributes [boolean] (optional) (default false = merge)
      required: false
      default: false
      example: "false"
      selector:
        boolean:

set_variable:
  # Description of the service
  name: Set Variable (Legacy)
  description: "Legacy service: Update a Sensor Variable value and/or its attributes. Will only work on Sensor Variables. Use one of the variable.update_ services for additional options."
  # Different fields that your service accepts
  fields:
    # Key of the field
    variable:
      name: Variable ID
      description: The name of the Sensor Variable to update [string] (required)
      required: true
      example: test_counter
      selector:
        text:
    value:
      name: New Value
      description: "New value to set. If a device class and native unit of measurement is set: 1. This will update the value in the native unit of measurement not necessarily the displayed unit of measurement if they are different. 2. It will give an error if the value is not a supported type for the device class (ex. setting a string for a temperature device class) (optional)"
      example: 9
      selector:
        text:
    attributes:
      name: New Attributes
      description: Attributes to set or update [dictionary] (optional)
      example: "{'key': 'value'}"
      selector:
        object:
    replace_attributes:
      name: Replace Attributes
      description: Replace or merge current attributes [boolean] (optional) (default false = merge)
      required: false
      default: false
      example: "false"
      selector:
        boolean:

set_entity:
  name: Set Entity (Legacy)
  description: "Legacy service: Update a Sensor Variable value and/or its attributes. Will only work on Sensor Variables. Use one of the variable.update_ services for additional options."
  fields:
    entity:
      name: Entity ID
      description: The entity_id of the Sensor Variable to update [string] (required)
      example: sensor.test_sensor
      required: true
      selector:
        entity:
          integration: variable
          domain: sensor
    value:
      name: New Value
      description: "New value to set. If a device class and native unit of measurement is set: 1. This will update the value in the native unit of measurement not necessarily the displayed unit of measurement if they are different. 2. It will give an error if the value is not a supported type for the device class (ex. setting a string for a temperature device class) (optional)"
      example: 9
      selector:
        text:
    attributes:
      name: New Attributes
      description: Attributes to set or update [dictionary] (optional)
      example: "{'key': 'value'}"
      selector:
        object:
    replace_attributes:
      name: Replace Attributes
      description: Replace or merge current attributes [boolean] (optional) (default false = merge)
      required: false
      default: false
      example: "false"
      selector:
        boolean:
