load("@npm//:defs.bzl", "npm_link_all_packages")
load("@aspect_rules_js//js:defs.bzl", "js_binary")
load("@rules_java//java:defs.bzl", "java_binary")
load("@rules_task//:defs.bzl", "cmd")
load("//release:defs.bzl", "publish_github_release", "release")

package(default_visibility = ["//visibility:public"])

npm_link_all_packages()

java_binary(
    name = "bazel-diff",
    main_class = "com.bazel_diff.Main",
    runtime_deps = ["@bazel_diff//jar"],
)

js_binary(
    name = "cli",
    data = [
        "lib/actions/GenerateAction.mjs",
        "lib/actions/PublishAction.mjs",
        "lib/actions/VersionAction.mjs",
        "lib/repositories/ChangelogRepository.mjs",
        "lib/repositories/ChangesetRepository.mjs",
        "lib/repositories/ConfigRepository.mjs",
        "lib/repositories/PackageRepository.mjs",
        "lib/repositories/PublishRepository.mjs",
        "lib/repositories/ReleaseRepository.mjs",
        "lib/repositories/TargetRepository.mjs",
        "lib/repositories/VersionRepository.mjs",
        "lib/utils.mjs",
        "//:node_modules/@changesets/write",
        "//:node_modules/commander",
        "//:node_modules/zx",
    ],
    entry_point = "cli.mjs",
    env = {
        "WORKSPACE_NAME": repository_name().lstrip("@"),
    },
)

js_binary(
    name = "changesets_cli",
    data = [
        "//:node_modules/@changesets/changelog-github",
        "//:node_modules/@changesets/cli",
        "//:node_modules/zx",
    ],
    entry_point = "changesets_cli.mjs",
)

filegroup(
    name = "all_files",
    srcs = glob(["**/*"]),
)

publish_github_release(
    name = "publish_github_release",
    before_cmds = [
        "export OP_SERVICE_ACCOUNT_TOKEN=${ONEPASSWORD_SERVICE_ACCOUNT_TOKEN_PROD:-}",
        "export GH_TOKEN=$($OP read op://vgijssel-prod/github-release/credential)",
    ],
    changelog_file = "CHANGELOG.md",  # TODO: update with workspace reference with digest etc
    env = {
        "OP": cmd.executable("@rules_task//tools/onepassword:op"),
    },
    release = ":release",
)

release(
    name = "release",
    changelog_file = "CHANGELOG.md",
    publish_cmds = [
        ":publish_github_release",
    ],
    release_name = "rules_release",
    target = ":all_files",
    version_file = "version.txt",
)
