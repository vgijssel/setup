load("@bazel_skylib//rules:write_file.bzl", "write_file")
load("@pdm//:requirements.bzl", "all_requirements", "requirement")
load("@rules_pycross//pycross:defs.bzl", "pycross_wheel_build")
load("@rules_python//python:defs.bzl", "py_test")

package(default_visibility = ["//visibility:public"])

pycross_wheel_build(
    name = "zstandard_build",
    config_settings = {
        "--build-option": [
            "--no-cffi-backend",
            "--system-zstd",
        ],
    },
    copts = ["-Wl,-s"],
    native_deps = [
        "//third_party/zstd",
    ],
    post_build_hooks = [
        "@rules_pycross//pycross/hooks:repair_wheel",
    ],
    sdist = "@pdm//zstandard:sdist",
    tags = ["manual"],
    deps = [
        "@pdm//:setuptools",
        "@pdm//:wheel",
    ],
)

write_file(
    name = "ipython_py",
    out = "ipython.py",
    content = [
        "import os",
        "import tempfile",
        "from IPython import start_ipython",
        "with tempfile.TemporaryDirectory() as d:",
        "  os.environ['IPYTHONDIR'] = str(d)",
        "  start_ipython()",
    ],
)

# Tests

py_test(
    name = "test_library_usage_via_ipython",
    srcs = [
        "ipython.py",
        "//:test_zstandard.py",
    ],
    args = ["$(location //:test_zstandard.py)"],
    main = "ipython.py",
    deps = [
        "@pdm//:ipython",
        "@pdm//:zstandard",
    ],
)

py_test(
    name = "test_zstandard",
    srcs = ["//:test_zstandard.py"],
    deps = ["@pdm//:zstandard"],
)

py_test(
    name = "test_regex",
    srcs = ["//:test_regex.py"],
    deps = ["@pdm//:regex"],
)

py_test(
    name = "test_cowsay",
    srcs = ["//:test_cowsay.py"],
    main = "test_cowsay.py",
    deps = ["@pdm//:cowsay"],
)

# Test using the `requirement` function
py_test(
    name = "test_regex_using_requirement",
    srcs = ["//:test_regex.py"],
    main = "test_regex.py",
    deps = [requirement("regex")],
)

# Test using `all_requirements`
py_test(
    name = "test_regex_using_all_requirements",
    srcs = ["//:test_regex.py"],
    main = "test_regex.py",
    deps = all_requirements,
)
